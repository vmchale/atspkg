.\" Automatically generated by Pandoc 2.8.1
.\"
.TH "atspkg (1)" "" "" "" ""
.hy
.SH NAME
.PP
atspkg - a build tool for ATS
.SH DESCRIPTION
.PP
\f[B]atspkg\f[R] is a build tool for the ATS2 language, written in
Haskell.
.SH SYNOPSIS
.PP
atspkg build
.PP
atspkg install
.PP
atspkg clean
.PP
atspkg test
.SH SUBCOMMANDS
.PP
\f[B]build\f[R] - Build all binary targets listed in atspkg.dhall
.PP
\f[B]test\f[R] - Run all tests listed in atspkg.dhall
.PP
\f[B]bench\f[R] - Rull all benchmarks listed in atspkg.dhall
.PP
\f[B]clean\f[R] - Clean current project directory
.PP
\f[B]nuke\f[R] - Remove all local files installed by \f[B]atspkg\f[R]
.PP
\f[B]remote\f[R] - Download a tarball from the given URL and try to
build its binary targets
.PP
\f[B]install\f[R] - Install binary targets to $HOME/.local/bin and
relevant manpages to $HOME/.local/share/man/man1
.PP
\f[B]upgrade\f[R] - Download the latest binary release of
\f[B]atspkg\f[R], if available
.PP
\f[B]valgrind\f[R] - Run \f[B]valgrind\f[R] on the generated binary
.PP
\f[B]run\f[R] - Run the generated binary
.PP
\f[B]check\f[R] - Check a pkg.dhall file to make sure it is well-typed.
.PP
\f[B]check-set\f[R] - Check a package set to make sure it is well-typed.
.PP
\f[B]list\f[R] - List all available packages in current package set.
.PP
\f[B]pack\f[R] - Create a tarball suitable for packaging the compiler.
Takes as an argument a directory containing the unpacked compiler.
.PP
\f[B]setup\f[R] - Set up manpages and shell completions.
.SH OPTIONS
.TP
\f[B]-h\f[R] \f[B]--help\f[R]
Display help
.TP
\f[B]-V\f[R] \f[B]--version\f[R]
Display version information
.TP
\f[B]--pkg-args\f[R]
Arguments to be passed to atspkg.dhall
.TP
\f[B]-r\f[R], \f[B]--rebuild\f[R]
Rebuild all binary targets.
.TP
\f[B]-l\f[R], \f[B]--no-lint\f[R]
Disable the build system linter
.TP
\f[B]-t\f[R], \f[B]--target\f[R]
Set the compilation target using its triple.
.TP
\f[B]-v\f[R], \f[B]--verbose\f[R]
Turn up the verbosity
.TP
\f[B]--debug\f[R]
Disable binary stripping and pass -g to the C compiler
.SH CONFIGURATION
.PP
\f[B]atspkg\f[R] is configured with Dhall, in an atspkg.dhall file.
\f[B]atspkg\f[R] can be configured to produce binary targets, static
library targets, shared object files, or plain C targets.
Artifacts can be linked against Haskell libraries if desired.
.PP
There is also a file $HOME/.config/atspkg/config.dhall which can be used
to configure all builds.
.SS TEMPLATES
.PP
There are several templates available for \f[B]pi\f[R] (see
https://crates.io/crates/project_init for more details).
Several examples:
.IP
.nf
\f[C]
pi new ats project
\f[R]
.fi
.IP
.nf
\f[C]
pi git vmchale/haskell-ats ambitious-project
\f[R]
.fi
.IP
.nf
\f[C]
pi git vmchale/ats-haskell weird-project
\f[R]
.fi
.SH BUGS
.PP
Please report any bugs you may come across to
https://github.com/vmchale/atspkg/issues.
.SH COPYRIGHT
.PP
Copyright 2018-2019.
Vanessa McHale.
All Rights Reserved.
.SH AUTHORS
Vanessa McHale<vamchale@gmail.com>.
